name: Promote Python Package

on:
  repository_dispatch:
    types: [package.synced]

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'staging'
  CLOUDSMITH_PRODUCTION_REPO: 'production'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: 'example_package'

permissions:
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:

      - name: Get OIDC token
        run: |
          value=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" | jq '.value')
          token=$(curl -X POST -H "Content-Type: application/json" -d "{\"oidc_token\":$value, \"service_slug\":\"$CLOUDSMITH_SERVICE_SLUG\"}" https://api.cloudsmith.io/openid/interview-yash-sharma/ | jq -r '.token')
          curl --request GET --url https://api.cloudsmith.io/v1/user/self/ --header "X-Api-Key:Bearer $token" --header 'accept: application/json'

      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      # Step 3: Get the package identifier from the webhook payload (which will include the version)
      - name: Get package identifier and promote
        run: |
          # Get the package version passed in the webhook payload
          PACKAGE_VERSION=${{ github.event.client_payload.package_version }}
          echo "Package Version: $PACKAGE_VERSION"

          # Query Cloudsmith for the package tagged 'ready-for-production'
          PACKAGE_QUERY="filename:${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz"
          echo "Searching for package with query: $PACKAGE_QUERY"
          
          # Query Cloudsmith for the package using the version tag 'ready-for-production'
          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -q "$PACKAGE_QUERY" -F json)
          
          # Extract the identifier from the package data using jq
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm')

          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" = "null" ]; then
            echo "Failed to find package identifier"
            exit 1
          fi

          echo "Found package identifier: $IDENTIFIER"
          
          # Tag the package as ready-for-production (this will add the 'ready-for-production' tag)
          cloudsmith tag add ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER ready-for-production

          # Promote package using the identifier
          cloudsmith mv --yes \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER \
            ${{ env.CLOUDSMITH_PRODUCTION_REPO }}

          echo "Package successfully promoted to production."
        shell: bash
